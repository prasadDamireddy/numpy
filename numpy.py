# -*- coding: utf-8 -*-
"""numpy.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pig4IsOagGKAnfAa7zIYCJwQDu6A8UFA
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# -------- NumPy Assignment --------
# 1. 1D Array Operations
arr1d = np.arange(1, 21)
sum_ = np.sum(arr1d)
mean = np.mean(arr1d)
median = np.median(arr1d)
std = np.std(arr1d)
indices_gt_10 = np.where(arr1d > 10)[0]

print("1.a. 1D Array Stats")
print("Sum:", sum_)
print("Mean:", mean)
print("Median:", median)
print("Standard Deviation:", round(std, 2))
print("1.b. Indices of elements > 10:", indices_gt_10)

# 2. 2D Array Operations
arr2d = np.arange(1, 17).reshape(4, 4)
print("\n2.a. 4x4 Array:\n", arr2d)
print("\n2.b. Transpose:\n", arr2d.T)
print("\n2.c. Row-wise sums:", np.sum(arr2d, axis=1))
print("2.c. Column-wise sums:", np.sum(arr2d, axis=0))

# 3. Random 3x3 Arrays
a = np.random.randint(1, 21, (3, 3))
b = np.random.randint(1, 21, (3, 3))
print("\n3.a. Array a:\n", a)
print("3.a. Array b:\n", b)
print("3.a. Addition:\n", a + b)
print("3.a. Subtraction:\n", a - b)
print("3.a. Multiplication:\n", a * b)
print("3.b. Dot Product:\n", np.dot(a, b))

# 4. Reshape and Slice
arr12 = np.arange(1, 13)
arr3x4 = arr12.reshape(3, 4)
print("\n4. Reshaped 3x4:\n", arr3x4)
print("4. Sliced (first 2 rows, last 2 columns):\n", arr3x4[:2, -2:])

# -------- Pandas Assignment --------
print("\nAssignment 2 - Pandas")
data = {
    'Name': ['Alice', 'Bob', 'Charlie', 'Diana', 'Eve'],
    'Age': [24, 27, 22, 32, 29],
    'Department': ['HR', 'Finance', 'IT', 'Marketing', 'HR'],
    'Salary': [45000, 54000, 50000, 62000, 47000]
}
df = pd.DataFrame(data)
print("\n1.a. First 5 rows:\n", df.head())
print("\n1.b. Summary stats:\n", df[['Age', 'Salary']].describe())
hr_avg = df[df['Department'] == 'HR']['Salary'].mean()
print("\n1.c. Average HR Salary: %.2f" % hr_avg)

# 2. Add Bonus
df['Bonus'] = df['Salary'] * 0.10
print("\n2. DataFrame with Bonus:\n", df)

# 3. Age filter
filtered = df[(df['Age'] >= 25) & (df['Age'] <= 30)]
print("\n3. Employees aged 25-30:\n", filtered)

# 4. Group by department
grouped = df.groupby('Department')['Salary'].mean()
print("\n4. Avg Salary by Dept:\n", grouped)

# 5. Sort and save
sorted_df = df.sort_values('Salary')
print("\n5. Sorted by Salary:\n", sorted_df)
sorted_df.to_csv('sorted_salaries.csv', index=False)

# -------- Matplotlib Assignment --------
print("\nAssignment 3 - Matplotlib")
# 1. Line plot
x = [1, 2, 3, 4, 5]
y = [10, 15, 25, 30, 50]
plt.figure()
plt.plot(x, y, marker='o')
plt.title('Simple Line Plot')
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.grid(True)
# plt.savefig('line_plot.png')
plt.show()
plt.close()

# 2. Bar graph
students = ['John', 'Jane', 'Alice', 'Bob']
marks = [75, 85, 60, 90]
plt.figure()
plt.bar(students, marks, color=['blue', 'orange', 'green', 'red'])
plt.title('Marks by Student')
plt.ylabel('Marks')
# plt.savefig('bar_graph.png')
plt.show()
plt.close()

# 3. Pie chart
regions = ['North America', 'Europe', 'Asia', 'Others']
revenue = [45, 25, 20, 10]
explode = [0.1, 0, 0, 0]  # Explode N. America
plt.figure()
plt.pie(revenue, labels=regions, autopct='%1.1f%%', explode=explode, shadow=True)
plt.title('Revenue by Region')
# plt.savefig('pie_chart.png')
plt.show()
plt.close()

# 4. Histogram
data = np.random.randint(1, 101, 1000)
plt.figure()
plt.hist(data, bins=20, color='purple', edgecolor='black')
plt.title('Histogram of Random Integers (1-100)')
plt.xlabel('Value')
plt.ylabel('Frequency')
# plt.savefig('histogram.png')
plt.show()
plt.close()

print("Plots saved as 'line_plot.png', 'bar_graph.png', 'pie_chart.png', 'histogram.png'.")
print("Sorted DataFrame saved to 'sorted_salaries.csv'.")

oputput 'sorted_Salries.csv'